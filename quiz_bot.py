from telebot import TeleBot, types
import random

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = TeleBot("7129058339:AAGg633TgnNaEV192RcG2gMy2ieTnY-z57Y")


# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
questions = [
    {"question": "–ö–∞–∫–æ–µ –æ–±–µ—â–∞–Ω–∏–µ –¥–∞–Ω–æ –ü–∞—Ä—Ç–Ω—ë—Ä–∞–º?", 
     "answers": ["–û–±–µ—Å–ø–µ—á–∏—Ç—å –±—É–¥—É—â–µ–µ –∫–æ—Ñ–µ–π–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏", "–î–æ—Ä–æ–≥–∞ –≤ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ", "–î–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ª—É—á—à–µ –¥–ª—è –ì–æ—Å—Ç–µ–π", "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –≤–∫–ª–∞–¥ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ"], 
     "correct": "–î–æ—Ä–æ–≥–∞ –≤ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ"},
    {"question": "–ß—Ç–æ –æ–±–µ—â–∞–Ω–æ –ì–æ—Å—Ç—è–º?", 
     "answers": ["–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å", "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ –∫–æ—Ñ–µ–π–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏", "–î–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π –∏—Ö –¥–µ–Ω—å –ª—É—á—à–µ", "–û—Ç–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –∑–∞–±–∏—Ä–∞—Ç—å"], 
     "correct": "–î–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π –∏—Ö –¥–µ–Ω—å –ª—É—á—à–µ"},
    {"question": "–ö–æ–º—É –æ–±–µ—â–∞–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –±—É–¥—É—â–µ–µ –∫–æ—Ñ–µ–π–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏?", 
     "answers": ["–ü–∞—Ä—Ç–Ω–µ—Ä–∞–º", "–ì–æ—Å—Ç—è–º", "–§–µ—Ä–º–µ—Ä–∞–º", "–û–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ"], 
     "correct": "–§–µ—Ä–º–µ—Ä–∞–º"},
    {"question": "–ö–∞–∫–æ–π –≤–∫–ª–∞–¥ –æ–±–µ—â–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ—Å—Ç–≤—É?", 
     "answers": ["–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å", "–û—Ç–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –∑–∞–±–∏—Ä–∞—Ç—å", "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –≤–∫–ª–∞–¥", "–î–æ—Ä–æ–≥–∞ –≤ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ"], 
     "correct": "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –≤–∫–ª–∞–¥"},
    {"question": "–ß—Ç–æ –æ–±–µ—â–∞–Ω–æ –∞–∫—Ü–∏–æ–Ω–µ—Ä–∞–º?", 
     "answers": ["–û–±–µ—Å–ø–µ—á–∏—Ç—å –±—É–¥—É—â–µ–µ –∫–æ—Ñ–µ", "–î–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ª—É—á—à–µ", "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –≤–∫–ª–∞–¥", "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è –æ–∂–∏–¥–∞–Ω–∏—è"], 
     "correct": "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø—Ä–∏–±—ã–ª—å, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è –æ–∂–∏–¥–∞–Ω–∏—è"},
    {"question": "–ö–∞–∫–æ–µ –æ–±–µ—â–∞–Ω–∏–µ –¥–∞–Ω–æ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ?", 
     "answers": ["–î–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ª—É—á—à–µ", "–î–æ—Ä–æ–≥–∞ –≤ —É—Å–ø–µ—à–Ω–æ–µ –±—É–¥—É—â–µ–µ", "–û—Ç–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –∑–∞–±–∏—Ä–∞—Ç—å", "–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –≤–∫–ª–∞–¥"], 
     "correct": "–û—Ç–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –∑–∞–±–∏—Ä–∞—Ç—å"},
    {"question": "–ö–∞–∫—É—é –æ—Å–Ω–æ–≤–Ω—É—é –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–≤–∞—è –∑–≤–µ–∑–¥–∞ –≤ STAR SKILLS?", 
     "answers": ["–£–º–µ–Ω—å—à–∞–µ—Ç —Å–∞–º–æ—É–≤–∞–∂–µ–Ω–∏–µ", "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏ –ø–æ–≤—ã—à–∞–µ—Ç —Å–∞–º–æ—É–≤–∞–∂–µ–Ω–∏–µ", "–ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Å–∞–º–æ—É–≤–∞–∂–µ–Ω–∏–µ"], 
     "correct": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏ –ø–æ–≤—ã—à–∞–µ—Ç —Å–∞–º–æ—É–≤–∞–∂–µ–Ω–∏–µ"},
    {"question": "–ß—Ç–æ —Å–ª–µ–¥—É–µ—Ç –¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—Å–ª—ã—à–∞–Ω–Ω–æ–µ?", 
     "answers": ["–ú–æ–ª—á–∞ —Å–ª—É—à–∞—Ç—å", "–ü—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", "–°–ª—É—à–∞—Ç—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å —É—Å–ª—ã—à–∞–Ω–Ω–æ–µ"], 
     "correct": "–°–ª—É—à–∞—Ç—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å —É—Å–ª—ã—à–∞–Ω–Ω–æ–µ"},
    {"question": "–ö–∞–∫–æ–π –Ω–∞–≤—ã–∫ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ –ø–æ–º–æ—â—å—é?", 
     "answers": ["–ò–∑–æ–ª—è—Ü–∏—è", "–ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ–º–æ—â–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ", "–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"], 
     "correct": "–ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ–º–æ—â–∏ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ"},
    {"question": "–ö–∞–∫–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –≤–µ—Ä–Ω–æ –æ STAR SKILLS?", 
     "answers": ["–û–Ω–∏ –Ω–µ –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏", "–û–Ω–∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç —É–∫—Ä–µ–ø–ª–µ–Ω–∏—é –¥–æ–≤–µ—Ä–∏—è –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è", "–í—Å–µ —Ç—Ä–∏ –Ω–∞–≤—ã–∫–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞"], 
     "correct": "–û–Ω–∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç —É–∫—Ä–µ–ø–ª–µ–Ω–∏—é –¥–æ–≤–µ—Ä–∏—è –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è"},
    {"question": "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è Starbucks?", 
     "answers": ["1965", "1971", "1980", "1990"], 
     "correct": "1971"},
    {"question": "–ö—Ç–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ª—é–¥–µ–π –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π Starbucks?", 
     "answers": ["–î–∂–µ—Ä—Ä–∏ –ë–æ–ª–¥—É–∏–Ω", "–ó–µ–≤ –°–∏–≥–ª", "–ì–æ—Ä–¥–æ–Ω –ë–æ—É–∫–µ—Ä", "–ê–ª—å—Ñ—Ä–µ–¥ –ü–∏—Ç"], 
     "correct": "–ê–ª—å—Ñ—Ä–µ–¥ –ü–∏—Ç"},
    {"question": "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω Starbucks?", 
     "answers": ["–ù—å—é-–ô–æ—Ä–∫", "–°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ", "–°–∏—ç—Ç–ª", "–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å"], 
     "correct": "–°–∏—ç—Ç–ª"},
    {"question": "–ö–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ 'Starbucks'?", 
     "answers": ["–≠—Ç–æ –∏–º—è –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∫–æ–º–ø–∞–Ω–∏–∏", "–≠—Ç–æ –∏–º—è –ø–æ–º–æ—â–Ω–∏–∫–∞ –∫–∞–ø–∏—Ç–∞–Ω–∞ –ê—Ö–∞–≤–∞ –∏–∑ –∫–Ω–∏–≥–∏ '–ú–æ–±–∏ –î–∏–∫'", "–≠—Ç–æ —Å–ª–æ–≤–æ, –æ–±–æ–∑–Ω–∞—á–∞—é—â–µ–µ '–∫–æ—Ñ–µ' –≤ –¥—Ä–µ–≤–Ω–µ–º —è–∑—ã–∫–µ", "–≠—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏ –∫–æ—Ñ–µ"], 
     "correct": "–≠—Ç–æ –∏–º—è –ø–æ–º–æ—â–Ω–∏–∫–∞ –∫–∞–ø–∏—Ç–∞–Ω–∞ –ê—Ö–∞–≤–∞ –∏–∑ –∫–Ω–∏–≥–∏ '–ú–æ–±–∏ –î–∏–∫'"},
    {"question": "–ö–∞–∫–æ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞ Starbucks?", 
     "answers": ["–î–≤—É—Ö–≤–æ—Å—Ç—ã–µ —Å–∏—Ä–µ–Ω—ã —É–±–∏–≤–∞—é—Ç –ª—é–¥–µ–π", "–î–≤—É—Ö–≤–æ—Å—Ç—ã–µ —Å–∏—Ä–µ–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—É—Ç—å –º–æ—Ä—è–∫–∞–º, —Å–ø–∞—Å–∞—è –∏—Ö –∂–∏–∑–Ω—å", "–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è", "–î–≤—É—Ö–≤–æ—Å—Ç—ã–µ —Å–∏—Ä–µ–Ω—ã –∑–∞–≤–ª–µ–∫–∞—é—Ç –º–æ—Ä—è–∫–æ–≤ –≤ –ª–æ–≤—É—à–∫–∏"], 
     "correct": "–î–≤—É—Ö–≤–æ—Å—Ç—ã–µ —Å–∏—Ä–µ–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—É—Ç—å –º–æ—Ä—è–∫–∞–º, —Å–ø–∞—Å–∞—è –∏—Ö –∂–∏–∑–Ω—å"},
    {"question": "–ö—Ç–æ –±—ã–ª –ø–µ—Ä–≤—ã–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –∑–µ–ª–µ–Ω—ã—Ö –∫–æ—Ñ–µ–π–Ω—ã—Ö –∑–µ—Ä–µ–Ω –¥–ª—è Starbucks?", 
     "answers": ["–î–∂–µ—Ä—Ä–∏ –ë–æ–ª–¥—É–∏–Ω", "–ó–µ–≤ –°–∏–≥–ª", "–ê–ª—å—Ñ—Ä–µ–¥ –ü–∏—Ç", "–ì–æ—Ä–¥–æ–Ω –ë–æ—É–∫–µ—Ä"], 
     "correct": "–ê–ª—å—Ñ—Ä–µ–¥ –ü–∏—Ç"}
]

# –°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–∞
user_sessions = {}
multiplayer_sessions = {}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_command(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞ üéÆ", "–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä üßë‚Äçü§ù‚Äçüßë")
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:", reply_markup=markup)

# –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞
@bot.message_handler(func=lambda message: message.text == "–û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞ üéÆ")
def start_singleplayer(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(message, get_singleplayer_name)

def get_singleplayer_name(message):
    user_sessions[message.chat.id] = {
        "name": message.text,
        "questions": random.sample(questions, 5),
        "current_index": 0,
        "correct": 0
    }
    send_singleplayer_question(message.chat.id)

def send_singleplayer_question(chat_id):
    session = user_sessions[chat_id]
    if session["current_index"] < len(session["questions"]):
        question = session["questions"][session["current_index"]]
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        for option in question["answers"]:
            markup.add(option)
        bot.send_message(chat_id, question["question"], reply_markup=markup)
    else:
        bot.send_message(chat_id, f"–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ {session['correct']} –∏–∑ {len(session['questions'])} –≤–æ–ø—Ä–æ—Å–æ–≤.")
        show_main_menu(chat_id)

@bot.message_handler(func=lambda message: message.chat.id in user_sessions)
def singleplayer_answer(message):
    session = user_sessions[message.chat.id]
    question = session["questions"][session["current_index"]]
    if message.text == question["correct"]:
        session["correct"] += 1
        bot.send_message(message.chat.id, "–í–µ—Ä–Ω–æ! ‚úÖ")
    else:
        bot.send_message(message.chat.id, f"–ù–µ–≤–µ—Ä–Ω–æ! ‚ùå –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {question['correct']}")
    session["current_index"] += 1
    send_singleplayer_question(message.chat.id)

# –ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä
@bot.message_handler(func=lambda message: message.text == "–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä üßë‚Äçü§ù‚Äçüßë")
def multiplayer_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É üè†", "–í–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É üö™", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É üè†")
def create_room(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(message, get_host_name)

def get_host_name(message):
    room_code = str(random.randint(1000, 9999))  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –∫–æ–º–Ω–∞—Ç—ã
    multiplayer_sessions[room_code] = {
        "host": message.chat.id,
        "host_name": message.text,
        "players": [],
        "players_names": {},  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ players_names
        "questions": random.sample(questions, 5),  # –í—ã–±–∏—Ä–∞–µ–º 5 —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        "current_index": 0,
        "correct": {}
    }
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(message.chat.id, f"–ö–æ–º–Ω–∞—Ç–∞ —Å –∫–æ–¥–æ–º {room_code} –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –∏–≥—Ä–æ–∫–æ–≤.", reply_markup=markup)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
    start_quiz_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_quiz_markup.add("–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üéÆ")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É" —Ç–æ–ª—å–∫–æ —Ö–æ–∑—è–∏–Ω—É –∫–æ–º–Ω–∞—Ç—ã
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É', –∫–æ–≥–¥–∞ –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã.", reply_markup=start_quiz_markup)

@bot.message_handler(func=lambda message: message.text == "–í–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É üö™")
def join_room(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:")
    bot.register_next_step_handler(message, join_room_code)

def join_room_code(message):
    room_code = message.text
    if room_code in multiplayer_sessions:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
        bot.register_next_step_handler(message, join_room_name, room_code)
    else:
        bot.send_message(message.chat.id, "–ö–æ–º–Ω–∞—Ç–∞ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

def join_room_name(message, room_code):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—Ö–æ–¥–∏—Ç –ª–∏ —ç—Ç–æ—Ç –∏–≥—Ä–æ–∫ –≤ –∫–æ–º–Ω–∞—Ç—É
    session = multiplayer_sessions[room_code]
    
    # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤ –∫–æ–º–Ω–∞—Ç–µ
    if message.chat.id in session["players"]:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –≤ —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ.")
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–º–Ω–∞—Ç—É
    session["players"].append(message.chat.id)
    session["correct"][message.chat.id] = 0
    session["players_names"][message.chat.id] = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
    bot.send_message(message.chat.id, f"–í—ã –≤–æ—à–ª–∏ –≤ –∫–æ–º–Ω–∞—Ç—É —Å –∫–æ–¥–æ–º {room_code}. –ñ–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞.")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å
    if len(session["players"]) > 1:  # –ú–∏–Ω–∏–º—É–º –¥–≤–∞ –∏–≥—Ä–æ–∫–∞
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ö–æ—Å—Ç—É
        bot.send_message(session["host"], "–ö–æ–º–Ω–∞—Ç–∞ –ø–æ–ª–Ω–∞! –í—Å–µ –∏–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É.")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º
        for player in session["players"]:
            if player != session["host"]:  # –ò–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
                bot.send_message(player, "–ö–æ–º–Ω–∞—Ç–∞ –ø–æ–ª–Ω–∞, –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ —Å–∫–æ—Ä–æ –Ω–∞—á–Ω–µ—Ç—Å—è!")

def show_main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(chat_id, "–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∏–≥—Ä—É. –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üéÆ")
def start_multiplayer_game(message):
    room_code = None
    for code, session in multiplayer_sessions.items():
        if session["host"] == message.chat.id:
            room_code = code
            break
    
    if not room_code:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Ö–æ—Å—Ç–æ–º –Ω–∏ –æ–¥–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã.")
        return

    session = multiplayer_sessions[room_code]
    session["current_index"] = 0

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º (–∫—Ä–æ–º–µ —Ö–æ—Å—Ç–∞)
    send_multiplayer_question(room_code)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ö–æ—Å—Ç—É –∫–Ω–æ–ø–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å ‚û°Ô∏è")
    bot.send_message(message.chat.id, "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å! –ù–∞–∂–∏–º–∞–π—Ç–µ '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å' –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.", reply_markup=markup)

def send_multiplayer_question(room_code):
    session = multiplayer_sessions[room_code]
    if session["current_index"] < len(session["questions"]):
        question = session["questions"][session["current_index"]]
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        for answer in question["answers"]:
            markup.add(answer)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º
        for player_id in session["players"]:
            if player_id != session["host"]:
                bot.send_message(player_id, question["question"], reply_markup=markup)
    else:
        # –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞
        end_multiplayer_game(room_code)

@bot.message_handler(func=lambda message: message.text == "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å ‚û°Ô∏è")
def next_multiplayer_question(message):
    room_code = None
    for code, session in multiplayer_sessions.items():
        if session["host"] == message.chat.id:
            room_code = code
            break

    if not room_code:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Ö–æ—Å—Ç–æ–º –Ω–∏ –æ–¥–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã.")
        return

    session = multiplayer_sessions[room_code]
    session["current_index"] += 1
    send_multiplayer_question(room_code)


@bot.message_handler(func=lambda message: any(message.chat.id in session["players"] for session in multiplayer_sessions.values()))
def multiplayer_answer(message):
    room_code = None
    for code, session in multiplayer_sessions.items():
        if message.chat.id in session["players"]:
            room_code = code
            break

    if not room_code:
        return

    session = multiplayer_sessions[room_code]
    question = session["questions"][session["current_index"]]

    if message.text == question["correct"]:
        session["correct"][message.chat.id] += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        bot.send_message(message.chat.id, "–í–µ—Ä–Ω–æ! ‚úÖ")
    else:
        bot.send_message(message.chat.id, f"–ù–µ–≤–µ—Ä–Ω–æ! ‚ùå –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {question['correct']}")


def end_multiplayer_game(room_code):
    session = multiplayer_sessions[room_code]
    scores = "\n".join([f"{session['players_names'][player]}: {score} –æ—á–∫–æ–≤" 
                        for player, score in session["correct"].items()])
    for player in session["players"]:
        bot.send_message(player, f"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Ç–æ–≥–∏:\n{scores}")
    del multiplayer_sessions[room_code]


bot.polling()